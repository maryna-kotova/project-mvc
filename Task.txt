Почитать:
htaccess:
https://www.nic.ru/help/fajl-htaccess-nastrojka-perenapravlenij-i-upravlenie-konfiguraciej-veb-servera_6793.html
https://codex.so/htaccess

MVC:
https://ru.hexlet.io/blog/posts/chto-takoe-mvc-rasskazyvaem-prostymi-slovami
https://maxsite.org/page/model-view-controller-php


Задания:

1. В новом проекте MVC:

spl_autoload_register(function($className){
    // Core\Libs\Route.php преобразовать в
    // core/libs/Route.php

   require_once $className.'.php';
});


2. В отдельной папке:
Давайте реализуем класс для работы с файлами. Пусть этот класс реализует следующий интерфейс:

<?php
	interface iFile
	{
		public function __construct($filePath);
		
		public function getPath(); // путь к файлу
		public function getDir();  // папка файла
		public function getName(); // имя файла
		public function getExt();  // расширение файла
		public function getSize(); // размер файла
		
		public function getText();          // получает текст файла
		public function setText($text);     // устанавливает текст файла
		public function appendText($text);  // добавляет текст в конец файла
		
		public function copy($copyPath);    // копирует файл
		public function delete();           // удаляет файл
		public function rename($newName);   // переименовывает файл
		public function replace($newPath);  // перемещает файл
	}
?>
Задача:
Реализуйте описанный класс в соответствии с интерфейсом. Проверьте работу вашего класса.